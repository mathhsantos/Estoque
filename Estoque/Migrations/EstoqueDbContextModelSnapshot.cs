// <auto-generated />
using System;
using Estoque.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estoque.Migrations
{
    [DbContext(typeof(EstoqueDbContext))]
    partial class EstoqueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Estoque.Models.CompanySite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SiteName");

                    b.HasKey("Id");

                    b.ToTable("CompanySite", (string)null);
                });

            modelBuilder.Entity("Estoque.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("Estoque.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanySiteId")
                        .HasColumnType("INT")
                        .HasColumnName("CompanySiteId");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INT")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("CompanySiteId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Email" }, "IX_Email")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Estoque.Models.ItEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssaAbloyTag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("AssaAbloyTag");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Description");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INT")
                        .HasColumnName("EmployeeId");

                    b.Property<string>("TypeEquipment")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TypeEquipment");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "AssaAbloyTag" }, "IX_Assa_Abloy_Tag")
                        .IsUnique();

                    b.ToTable("ItEquipment", (string)null);
                });

            modelBuilder.Entity("Estoque.Models.Employee", b =>
                {
                    b.HasOne("Estoque.Models.CompanySite", "CompanySite")
                        .WithMany("Employees")
                        .HasForeignKey("CompanySiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CompanySiteId");

                    b.HasOne("Estoque.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DepartmentId");

                    b.Navigation("CompanySite");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Estoque.Models.ItEquipment", b =>
                {
                    b.HasOne("Estoque.Models.Employee", "Employee")
                        .WithMany("Equipments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Estoque.Models.CompanySite", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Estoque.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Estoque.Models.Employee", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
